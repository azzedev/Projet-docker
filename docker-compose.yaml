services:
  backend:
    build:
      context: ./backend 
    ports:
      - "5000:5000"
    env_file:
      - ./.env
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - TEST_DATABASE_URL=${TEST_DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.backend.rule=PathPrefix(`/apizzed`)" 
    - "traefik.http.services.backend.loadbalancer.server.port=5000"
    depends_on:
      - mysql
    networks:
      - webnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s


  frontend:
    build:
      context: ./frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"
    depends_on:
      - backend
    networks:
      - webnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s


  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - webnet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpassword"]
      interval: 30s
      timeout: 10s
      retries: 3

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mysql
    networks:
      - webnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  traefik:
      image: traefik:v2.9
      command:
        - "--api.insecure=true" 
        - "--providers.docker=true" 
        - "--entrypoints.web.address=:80" 
      ports:
        - "80:80"
        - "8080:8080"
      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock:ro"
      networks:
        - webnet
      healthcheck:
        test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8080/api/rawdata"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 40s

volumes:
  mysql_data:

networks:
  webnet:
